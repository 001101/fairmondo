- comments = true unless local_assigns.has_key? :comments

.Library-buttons
  = comments_counter(library)
  = heart_button(library)
.Library-userimage
  = image_tag(library.user.image_url(:profile), class: "User-profile-image")

- cache [library,library.user,"library_header"] do
  .Library-info
    .Library-info-text
      span.Library-info-text-title
        = link_to library.name, library_path(library)
      span.Library-info-text-user
        = link_to user_path(library.user) do
          = t('common.text.glue.from')
          = library.user_nickname
    .Library-info-thumbnails
      - library.library_elements.preload{article_reduced.title_image}.first(10).each do |library_element|
        - if library_element.article_reduced
          = image_tag(library_element.article_reduced.title_image_url(:thumb), :title => library_element.article_reduced_title)

-# Show comments
- if comments && library.has_comments?
  .Library-comments
    = render library.comments.limit(2)

-# Show audit buttons for admins
- if policy(library).admin_audit?
  .Library-auditing
    = link_to admin_audit_library_path(library), class: 'Button ' + (library.audited ? 'Button--green' : 'Button--red'), method: :patch, remote: true do
      = t(library.audited ? 'library.auditing.welcome_page_enabled' : 'library.auditing.welcome_page_disabled')
