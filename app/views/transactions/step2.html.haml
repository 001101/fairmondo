-# Part 2 of the edit action
-#
-# == License:
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#
- selected_transport = params["transaction"]["selected_transport"]
- selected_payment = params["transaction"]["selected_payment"]
- quantity = params["transaction"]["quantity_bought"]
- quantity = (quantity.nil? || quantity.empty?) ? 1 : quantity.to_i
- forename = params["transaction"]["forename"]
- surname  = params["transaction"]["surname"]
- street   = params["transaction"]["street"]
- city     = params["transaction"]["city"]
- zip      = params["transaction"]["zip"]
- country  = params["transaction"]["country"]

.l-Main
  .l-Inner
    .Content
      .Content-inner
        %h1
          = t 'transaction.edit.heading'

        = semantic_form_for @transaction do |f|
          = f.inputs do
            = f.hidden_field :selected_transport, value: selected_transport
            = f.hidden_field :selected_payment, value: selected_payment
            = f.hidden_field :quantity_bought, value: quantity

            = f.hidden_field :forename, value: forename
            = f.hidden_field :surname, value: surname
            = f.hidden_field :street, value: street
            = f.hidden_field :city, value: city
            = f.hidden_field :zip, value: zip
            = f.hidden_field :country, value: country

            = render 'article_display'
            %hr
            %p
              %br
              %h3
                = t 'transaction.edit.address'
              = forename + ' ' + surname
              %br
              = street
              %br
              = zip
              = city
              %br
              = country

            - if @transaction.article_seller.is_a?(LegalEntity)
              .about_terms_cancellation
                %hr
                %br
                %h3
                  = t 'transaction.edit.seller_data'

                %p
                  = resource.article_seller.fullname

                #about
                  = t 'transaction.edit.imprint'
                  .Scrollbox
                    = @transaction.article_seller_about

                #terms
                  = t 'transaction.edit.terms'
                  .Scrollbox
                    = @transaction.article_seller_terms
                  = link_to 'Drucken', profile_user_path(resource.article_seller, print: 'terms'), class: 'Btn', target: '_blank'

                #cancellation
                  = t 'transaction.edit.cancellation'
                  .Scrollbox
                    = @transaction.article_seller_cancellation
                  = link_to 'Drucken', profile_user_path(resource.article_seller, print: 'cancellation'), class: 'Btn', target: '_blank'

                %p
                  = f.input :tos_accepted
            %hr
            %br
            %h5
              = t 'transaction.edit.message'
            %p
              = f.input :message, label: false, input_html: { rows: 3 }

            %hr
            %br
            %h3
              = t 'transaction.edit.purchase_data'

            %p
            %table
              %colgroup
                %col{width: 150}
                %col{width: 300}
              %tr
                %td
                  %strong
                    = t('transaction.edit.quantity_bought')
                %td
                  = quantity
              %tr
                %td
                  %strong
                    = t('transaction.edit.payment_type')
                %td
                  = t('enumerize.transaction.selected_payment.' + selected_payment)
              %tr
                %td
                  %strong
                    = t('transaction.edit.transport_type')
                %td
                  = t('enumerize.transaction.selected_transport.' + selected_transport)
                  = transport_provider_for selected_transport
            %br
            %h3
              = t 'transaction.edit.price_heading'

            %p
              %strong
                = t('transaction.edit.quantity_bought') + quantity.to_s
              %br
              %strong
                = display_sales_price quantity

              - if resource.article_seller.is_a? LegalEntity
                = render 'legal_entity_price_display', quantity: quantity, selected_transport: selected_transport
              %br
              = t 'transaction.edit.fair_percent', donation: humanized_money_with_symbol(resource.article_calculated_fair * quantity)
              %hr
              %br
              = ( display_transport_price selected_transport, quantity ) + ' *'
              %br
              = display_cash_on_delivery_price selected_payment, quantity
              %hr
              %br
              %h2
                = display_total_price selected_transport, selected_payment, quantity

          %br
          = f.actions do
            = f.action :submit, label: t('transaction.actions.purchase'), button_html: { class: 'Btn'}
            = back_link quantity, selected_transport, selected_payment, forename, surname, street, city, zip, country
            %p
              %small * Zur Zeit unterstützen wir keine automatisierten Kombiversandgebühren. Bitte kläre vorab mit dem*der Verkäufer*in, ob bei Kauf von mehreren Artikeln die Versandgebühren geringer ausfallen, da mehrere Artikel gemeinsam verschickt werden können.
