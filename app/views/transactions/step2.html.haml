-#
-#
-# == License:
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#
%h2
  = t 'transaction.edit.heading'

= semantic_form_for @transaction do |f|
  = f.inputs do
    = f.hidden_field :selected_transport, value: params["transaction"]["selected_transport"]
    = f.hidden_field :selected_payment, value: params["transaction"]["selected_payment"]

    %h3
      Bestelldaten

    %p
      = "#{t('transaction.edit.payment_type')}: Ueberweisung"
      %br
      %br
      = "#{t('transaction.edit.transport_type')}: Selbstabholung"
      %br
      = "#{t('transaction.edit.transport_provider')}: DHL"
      %br
      %br
      %strong
        = t 'transaction.edit.address'
      %br
      = current_user.fullname
      %br
      = current_user.street
      %br
      = current_user.zip
      = current_user.city
      %br
      = current_user.country

    %h3
      Vorraussichtlicher Preis

    %p
      (Netto)
      = humanized_money_with_symbol @transaction.article.price
      %br
      (zzgl X% Mwst)
      = humanized_money_with_symbol 0
      %br
      Versandkosten:
      = humanized_money_with_symbol @transaction.article.transport_price(params["transaction"]["selected_transport"])
      -# Bei Nachnahme hier Zusatzkosten
      -# Grundpreis, falls angegeben
      %br
      %br
      %strong
        (Brutto)
        = humanized_money_with_symbol( @transaction.article.price + @transaction.article.transport_price(params["transaction"]["selected_transport"]) )

    %p
      = f.input :tos_accepted

  = f.actions do
    = link_to t('common.actions.back'), edit_transaction_path(@transaction), class: 'btn'
    = f.action :submit, label: t('transaction.actions.purchase')

