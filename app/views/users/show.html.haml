-#
-#
-# == License:
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#
= render 'header'
- if resource.is? current_user
  .Accordion.Accordion--activated.Accordion--scrollToActive
    = render '/users/show/article_accordion', item_name: 'active', item_link: new_article_path, articles: active_articles
    = render '/users/show/article_accordion', item_name: 'inactive', articles: inactive_articles
    = render '/users/show/line_item_group_accordion', item_name: 'seller_line_item_groups', line_item_groups: sold_line_item_groups
    = render '/users/show/line_item_group_accordion', item_name: 'buyer_line_item_groups', line_item_groups: bought_line_item_groups
    -#TODO change partial names and contents

    = accordion_item 'my_article_templates' do
      %p
        = link_to t('article_templates.actions.new'), new_article_template_path, class: 'Button'
        %span.sprite_helper{title: 'Wenn Du einen neuen Artikel einstellst, kannst Du alle Angaben als Vorlage speichen.'}
      = render "article_templates/table", :article_templates => resource.article_templates
    - if resource.is_a?(LegalEntity) && resource.mass_uploads.any?
      = accordion_item 'my_mass_uploads' do
        = render 'mass_uploads/table'


- else
  .articles
    = render '/articles/shared/articles_grid', articles: ActiveUserArticles.new(resource).paginate(params[:active_articles_page])
  = paginate active_articles, param_name: 'active_articles_page'
