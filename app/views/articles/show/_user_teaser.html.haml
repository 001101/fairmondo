-#
-#
-# == License:
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#
.User.User--teaser
  = render partial: '/shared/profile_img', locals: {user: resource.seller, show_title: true}
  .User-accordion.Accordion
    = accordion_item "other_products", :number => active_seller_articles.total_count, :title => t('article.titles.other-products') do
      = render :partial=>'/shared/list_articles_small', :locals=>{ :articles=> active_seller_articles, :paginate => true, :anchor=> "other_products"}

  - if resource.libraries.find_all_by_public(true).count > 0
    .Accordion.Accordion--full
      = accordion_item "library", :number => resource.libraries.includes(:user => :image).find_all_by_public(true).count, :title => t('article.titles.libraries') do
        - libraries.each do |library|
          .User-library-small
            .User-image
              = link_to image_tag(library.user.image_url(:profile)), user_path(:id => library.user.id)
            %p.User-library--title
              = link_to library.name, user_libraries_path(:user_id => library.user , :anchor => "library"+library.id.to_s)
            %p.User-library--user
              = t('common.text.from') + " "
              = link_to( library.user_nickname, user_path(library.user))
        = paginate libraries, :params => {:anchor => "library" }

  .Accordion.Accordion--full
    - if policy(resource).report?
      = accordion_item "report" do
        = render 'feedbacks/varieties/report', feedback: Feedback.new
  - if User.is_admin? current_user
    .Admin-controls
      - if resource.active?
        = button_to '*Pionier*-Artikel', exhibits_path(exhibit: {article_id: resource.id, queue: :pioneer}), class: "Btn Btn--redSmall", method: :post
        = button_to '*Neues auf Fairnopoly*-Artikel', exhibits_path(exhibit: {article_id: resource.id, queue: :newest}), class: "Btn Btn--redSmall", method: :post
        = button_to 'Neues Dreamteam', exhibits_path(exhibit: {article_id: resource.id, queue: :dream_team}), class: "Btn Btn--redSmall", method: :post
        %hr
        - Exhibit.where(:queue => :dream_team).where(:related_article_id => nil).each do |dreamteam|
          = form_tag exhibit_path(dreamteam), method: :put do
            = hidden_field_tag 'exhibit[related_article_id]', resource.id
            = submit_tag "Dreamteam mit #{truncate(dreamteam.article.title,:length => 15)}", class: "Btn Btn--redSmall"
            = link_to "#{truncate(dreamteam.article.title,:length => 15)} ansehen", dreamteam.article
            %hr
