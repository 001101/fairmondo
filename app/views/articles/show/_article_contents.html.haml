-#
-# Farinopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Farinopoly.
-#
-# Farinopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Farinopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Farinopoly.  If not, see <http://www.gnu.org/licenses/>.
-#

- if resource.owned_by? current_user
  %div.Article-controls
    - if policy(resource).edit?
      = link_to t('article.titles.edit') , edit_article_path , :class => "Btn Btn--gray"
    - if resource.locked? && policy(resource).new?
      = link_to t('article.labels.edit_as_new') , new_article_path(:edit_as_new => resource.id), :class => "Btn Btn--gray"
    - if policy(resource).deactivate?
      = button_to t('article.labels.deactivate') , article_path(:deactivate => true), :class => "Btn", :method => :put
    - if policy(resource).destroy?
      = button_to t('common.actions.destroy'),  article_path(resource) , :confirm => t('article.delete_confirm', :name => article.title) ,:method => :delete, :class => "Btn Btn--gray"


%figure.Article-image
  = link_to image_tag((title_image ? title_image.image.url(:thumb) : "missing.png"), :class=> "title_image"), title_image ? title_image.image.url(:original) : "/assets/missing.png", {:class => "colorbox", :rel => "gallery"}

.Article-info
  .Article-info--right
    %h2
      = resource.title
    %p.Article-price= humanized_money_with_symbol resource.price
    %p.Article-vat= t('formtastic.labels.article.price')
    %br
    %p.Article-transportprice
      = t('formtastic.labels.article.transport_method')+" :"
      %ul.Article-transportmethods
        = transport_format_for "pickup","Article-transportprice"
        = transport_format_for "insured","Article-transportprice"
        = transport_format_for "uninsured","Article-transportprice"
    - unless article.vat == 0
      %p.Article-vat= t('article.vat_included', :mwst => article.vat)
    = render 'articles/show/basic_price', :article => resource
    - if resource.quantity && resource.quantity != ""
      %p.Article-quantity
        %span= t('formtastic.labels.article.quantity_with_numbers', :quantities => resource.quantity)
      %p
        - if user_signed_in? && !current_user.libraries.blank?
          = semantic_form_for(resource.library_elements.build,:html => {} ,:url => user_library_elements_path(:user_id => current_user)) do |f|
            .library
              = f.inputs do
                = f.input :library, :collection => current_user.libraries,  :include_blank => false , :label => false
                = f.input :article_id, :as => :hidden
              = f.button t('common.actions.collect'), :class => "Btn Btn--blue"
              %i.icon-helper{title: "Füge diesen Artikel einer Deiner Sammlungen hinzu. So behältst Du ihn ganz leicht im Auge. Wenn Du eine öffentliche Sammlung wählst, können auch andere sehen, was Du empfiehlst." }
        - elsif user_signed_in?
          = link_to('Sammlung erstellen', user_libraries_path(current_user), :method => :post, :class => "Btn")
  .Article-info--left
    .Thumbnail-container
      - thumbnails(title_image).each do |image|
        = link_to image_tag((image ? image.image.url(:thumb) : "missing.png"), :class=> "title_image"), image ? image.image.url(:original) : "/assets/missing.png", {:class => "colorbox Thumbnail", :rel => "gallery"}
    .Article-friendly
      %p.Highlight

        =t('article.show.friendly_percent')
        %i.icon-helper{:title => t('some text')}
      %p
        =t('article.show.donate_html')
    %p
      -#Accordion--activated.Article-tags
      = features_label resource
      = condition_label resource
.Articles-social#socialshareprivacy
.Article-accordion.Accordion--activated
  / Artikelbeschreibung
  = accordion_item "content" do
    = resource.content.html_safe

  = accordion_item "payment" do
    .Article-box
      %p.Highlight
        = t('formtastic.labels.article.payment_methods')+':'
        %ul
          = payment_format_for "bank_transfer"
          = payment_format_for "cash"
          = payment_format_for "paypal"
          = payment_format_for "cash_on_delivery"
          = payment_format_for "invoice"
      = simple_format(resource.payment_details).html_safe
    .Article-box
      %p.Highlight
        = t('formtastic.labels.article.default_transport')+':'
        %ul
          = transport_format_for "pickup"
          = transport_format_for "insured"
          = transport_format_for "uninsured"
      = simple_format(resource.transport_details).html_safe
  - if resource.has_commendation?
    = accordion_item "commendation" do
      = render 'articles/show/commendation'
  / Only legal sellers
  - if resource.seller.is_a?(LegalEntity)
    = accordion_item "terms" do
      = resource.seller_terms.html_safe
    = accordion_item "cancellation" do
      = resource.seller_cancellation.html_safe
    = accordion_item "about" do
      = resource.seller_about.html_safe
  - if resource.libraries.find_all_by_public(true).count > 0
    = accordion_item "library", :number => resource.libraries.find_all_by_public(true).count, :title => t('article.titles.libraries') do
      - libraries.each do |library|
        .User-library.Article--teaser
          .User-image
            = link_to image_tag(library.user.image_url(:thumb)), user_path(:id => library.user.id)
          %p.User-library--title
            = link_to library.name, user_libraries_path(:user_id => library.user , :anchor => "library"+library.id.to_s)
          %p.User-library--user
            = t('common.text.from') + " " + library.user_nickname


      = will_paginate libraries, :params => {:anchor => "library" }

