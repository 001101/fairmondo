-#
-#
-# == License:
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#
.Content
  = semantic_form_for resource, url: step2_business_transaction_path(resource), html: { :class => 'transactions-form' } do |f|
    = render 'article_display'

    %h3
      = t 'transaction.edit.choose_purchase_data'
    = f.inputs do
      - if resource.is_a? MultipleFixedPriceTransaction
        = f.input :quantity_bought, input_html: { min: 1, max: resource.quantity_available, step: 1, value: default_value(:quantity_bought) || 1 }

      = f.input :selected_transport, include_blank: false, collection: resource.selected_transports, selected: default_value(:selected_transport)
      %ul.price-list
        = display_price_list_item :transport, :type1
        = display_price_list_item :transport, :type2

      = f.input :selected_payment, include_blank: false, collection: resource.selected_payments, selected: default_value(:selected_payment)
      %ul.price-list
        = display_price_list_item :payment, :cash_on_delivery
    %p.warning
      = t 'transaction.edit.security_warning'

    %h3
      = t 'transaction.edit.addresses'

    - unless resource.billing_address.new_record? || !resource.billing_address.valid?
      .Grid
        = render 'addresses/address', address: resource.billing_address
    - else
      = f.semantic_fields_for :billing_address do |baf|
        = baf.inputs do
          = baf.input :title, as: :select, collection: [t('common.title.woman'),t('common.title.man')]
          = baf.input :first_name, required: true
          = baf.input :last_name, required: true
          = baf.input :company_name
          = baf.input :address_line_1, required: true
          = baf.input :address_line_2
          = baf.input :zip, required: true
          = baf.input :city, required: true
          = baf.input :country, required: true, as: :select, collection: [t('users.countries.germany')]

    %h3
      Eine andere Versandadresse verwenden

    %fieldset.inputs#address_select
      = render 'addresses/addresses', radio: true

    = f.inputs do
      = f.input :billing_address_id, as: :hidden, default: current_user.standard_address_id

    = link_to 'neue Adresse hinzuf√ºgen', new_user_address_path(current_user, radio: true), { class: 'colorbox' }
    %hr

    %p.next_step
      = t 'transaction.edit.next_step_explanation'
    = f.actions do
      = f.action :submit, label: t('common.actions.continue'), button_html: { class: 'Button' }
