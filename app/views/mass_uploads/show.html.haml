%h1
  = t('mass_uploads.titles.upload_report')

- if resource.empty?
  = t('mass_uploads.errors.no_activate_content')
- else
  .Import-detail
    .Accordion--activated.Accordion--scrollToActive
    - unless resource.created_articles.empty?
      = accordion_item "created" do
        %ul
          - resource.created_articles.each do |article|
            = render "article_digest", :article => article
    - unless resource.updated_articles.empty?
      = accordion_item "updated" do
        %ul
          - resource.updated_articles.each do |article|
            = render "article_digest", :article => article

    - unless resource.activated_articles.empty?
      = accordion_item "activated" do
        %ul
          - resource.activated_articles.each do |article|
            = render "article_digest", :article => article

    - unless resource.deactivated_articles.empty?
      = accordion_item "deactivated" do
        %ul
          - resource.deactivated_articles.each do |article|
            = render "article_digest", :article => article

    - unless resource.deleted_articles.empty?
      = accordion_item "deleted" do
        %ul
          - resource.deleted_articles.each do |article|
            = render "article_digest", :article => article

    - unless resource.erroneous_articles.empty?
      = accordion_item "failed", :item_class => "Accordion-item--errors" do
        %ul
          - resource.erroneous_articles.each do |article|
            %li
              %h4
                Zeile:
                = article.row_index
              = simple_format(article.validation_errors)
        = link_to "Fehlerhaften Artikel exportieren", mass_upload_path(resource, format: "csv"), :class => "Btn Btn--blue Btn--overwrite"


- unless resource.articles_for_mass_activation.empty?
  = render "mass_activation", :articles => resource.articles_for_mass_activation
